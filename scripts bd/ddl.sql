-- MySQL Script generated by MySQL Workbench
-- lun 26 ago 2024 14:23:35
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema 5to_RiotGames
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `5to_RiotGames`;

-- -----------------------------------------------------
-- Schema 5to_RiotGames
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `5to_RiotGames` DEFAULT CHARACTER SET utf8;
USE `5to_RiotGames`;

-- -----------------------------------------------------
-- Table `5to_RiotGames`.`Servidor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `5to_RiotGames`.`Servidor`;

CREATE TABLE IF NOT EXISTS `5to_RiotGames`.`Servidor` (
  `idServidor` TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NULL,
  `Abreviado` CHAR(4) NULL,
  PRIMARY KEY (`idServidor`),
  UNIQUE INDEX `idServidor_UNIQUE` (`idServidor` ASC),
  UNIQUE INDEX `Abreviado_UNIQUE` (`Abreviado` ASC),
  UNIQUE INDEX `Nombre_UNIQUE` (`Nombre` ASC)
) ENGINE=InnoDB;

-- -----------------------------------------------------
-- Table `5to_RiotGames`.`Cuenta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `5to_RiotGames`.`Cuenta`;

CREATE TABLE IF NOT EXISTS `5to_RiotGames`.`Cuenta` (
  `idCuenta` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `idServidor` TINYINT UNSIGNED NOT NULL,
  `Nombre` VARCHAR(45) NOT NULL,
  `Contrasena` CHAR(64) NOT NULL,
  `eMail` VARCHAR(45) NULL,
  PRIMARY KEY (`idCuenta`),
  UNIQUE INDEX `uq_Cuenta_idServidor_Nombre` (`idServidor`, `Nombre`),
  UNIQUE INDEX `uq_Cuenta_eMail_idServidor` (`eMail`, `idServidor`),
  INDEX `fk_Cuenta_Servidor1_idx` (`idServidor`),
  CONSTRAINT `fk_Cuenta_Servidor1`
    FOREIGN KEY (`idServidor`)
    REFERENCES `5to_RiotGames`.`Servidor` (`idServidor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE=InnoDB;

-- -----------------------------------------------------
-- Table `5to_RiotGames`.`RangoLol`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `5to_RiotGames`.`RangoLol`;

CREATE TABLE IF NOT EXISTS `5to_RiotGames`.`RangoLol` (
  `idRango` TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  `PuntosLigaNecesario` MEDIUMINT NOT NULL,
  `Numero` TINYINT UNSIGNED NULL,
  PRIMARY KEY (`idRango`),
  UNIQUE INDEX `uq_RangoLol_PuntosLigaNecesario` (`PuntosLigaNecesario`)
) ENGINE=InnoDB;

-- -----------------------------------------------------
-- Table `5to_RiotGames`.`CuentaLol`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `5to_RiotGames`.`CuentaLol`;

CREATE TABLE IF NOT EXISTS `5to_RiotGames`.`CuentaLol` (
  `idCuenta` INT UNSIGNED NOT NULL,
  `Nombre` VARCHAR(45) NOT NULL,
  `Nivel` INT UNSIGNED NOT NULL DEFAULT 0,
  `EsenciaAzul` INT UNSIGNED NULL DEFAULT 0,
  `PuntosRiot` INT UNSIGNED NULL DEFAULT 0,
  `PuntosLiga` MEDIUMINT NULL DEFAULT 0,
  `idRango` TINYINT UNSIGNED NULL DEFAULT 0,
  PRIMARY KEY (`idCuenta`),
  INDEX `fk_CuentaLol_Rango1_idx` (`idRango`),
  CONSTRAINT `fk_CuentaLol_Rango1`
    FOREIGN KEY (`idRango`)
    REFERENCES `5to_RiotGames`.`RangoLol` (`idRango`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CuentaLol_Cuenta1`
    FOREIGN KEY (`idCuenta`)
    REFERENCES `5to_RiotGames`.`Cuenta` (`idCuenta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE=InnoDB;

-- -----------------------------------------------------
-- Table `5to_RiotGames`.`TipoObjeto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `5to_RiotGames`.`TipoObjeto`;

CREATE TABLE IF NOT EXISTS `5to_RiotGames`.`TipoObjeto` (
  `idTipoObjeto` TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idTipoObjeto`),
  UNIQUE INDEX `uq_TipoObjeto_nombre` (`nombre`)
) ENGINE=InnoDB;

-- -----------------------------------------------------
-- Table `5to_RiotGames`.`Objeto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `5to_RiotGames`.`Objeto`;

CREATE TABLE IF NOT EXISTS `5to_RiotGames`.`Objeto` (
  `idObjeto` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  `PrecioEA` INT UNSIGNED NULL,
  `PrecioRP` INT UNSIGNED NULL,
  `Venta` INT UNSIGNED NULL,
  `idTipoObjeto` TINYINT UNSIGNED NOT NULL,
  PRIMARY KEY (`idObjeto`),
  UNIQUE INDEX `uq_Objeto_Nombre` (`Nombre`),
  INDEX `fk_Objeto_TipoObjeto1_idx` (`idTipoObjeto`),
  CONSTRAINT `fk_Objeto_TipoObjeto1`
    FOREIGN KEY (`idTipoObjeto`)
    REFERENCES `5to_RiotGames`.`TipoObjeto` (`idTipoObjeto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE=InnoDB;

-- -----------------------------------------------------
-- Table `5to_RiotGames`.`Inventario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `5to_RiotGames`.`Inventario`;

CREATE TABLE IF NOT EXISTS `5to_RiotGames`.`Inventario` (
  `idCuenta` INT UNSIGNED NOT NULL,
  `idObjeto` SMALLINT UNSIGNED NOT NULL,
  `Cantidad` INT NULL,
  PRIMARY KEY (`idCuenta`, `idObjeto`),
  CONSTRAINT `fk_Inventario_Objeto1`
    FOREIGN KEY (`idObjeto`)
    REFERENCES `5to_RiotGames`.`Objeto` (`idObjeto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Inventario_CuentaLol1`
    FOREIGN KEY (`idCuenta`)
    REFERENCES `5to_RiotGames`.`CuentaLol` (`idCuenta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE=InnoDB;

-- -----------------------------------------------------
-- Table `5to_RiotGames`.`RangoValorant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `5to_RiotGames`.`RangoValorant`;

CREATE TABLE IF NOT EXISTS `5to_RiotGames`.`RangoValorant` (
  `idRango` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NULL,
  `Numero` SMALLINT UNSIGNED NULL,
  `PuntosNecesarios` MEDIUMINT NOT NULL,
  PRIMARY KEY (`idRango`),
  UNIQUE INDEX `uq_RangoValorant_PuntosNecesarios` (`PuntosNecesarios`),
  UNIQUE INDEX `uq_RangoValorant_Numero` (`Numero`)
) ENGINE=InnoDB;

-- -----------------------------------------------------
-- Table `5to_RiotGames`.`CuentaValorant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `5to_RiotGames`.`CuentaValorant`;

CREATE TABLE IF NOT EXISTS `5to_RiotGames`.`CuentaValorant` (
  `idCuenta` INT UNSIGNED NOT NULL,
  `Nombre` VARCHAR(45) NULL,
  `Nivel` INT UNSIGNED NOT NULL DEFAULT 0,
  `Experiencia` INT UNSIGNED NOT NULL DEFAULT 0,
  `PuntosCompetitivo` MEDIUMINT NOT NULL DEFAULT 0,
  `idRango` SMALLINT UNSIGNED NULL DEFAULT 0,
  PRIMARY KEY (`idCuenta`),
  INDEX `fk_CuentaValorant_Rango1_idx` (`idRango`),
  CONSTRAINT `fk_CuentaValorant_Rango1`
    FOREIGN KEY (`idRango`)
    REFERENCES `5to_RiotGames`.`RangoValorant` (`idRango`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CuentaValorant_Cuenta1`
    FOREIGN KEY (`idCuenta`)
    REFERENCES `5to_RiotGames`.`Cuenta` (`idCuenta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE=InnoDB;

-- -----------------------------------------------------
-- Trigger `5to_RiotGames`.`bi_Inv`
-- -----------------------------------------------------
DROP TRIGGER IF EXISTS `5to_RiotGames`.`bi_Inv`;

DELIMITER //

CREATE TRIGGER `bi_Inv` 
BEFORE INSERT ON `5to_RiotGames`.`Inventario`
FOR EACH ROW
BEGIN
  DECLARE 
    v_exists BOOLEAN;
  
  -- Verificar existencia de la cuenta y del objeto
  SELECT COUNT(*) INTO v_exists
  FROM `5to_RiotGames`.`CuentaLol` c
  JOIN `5to_RiotGames`.`Objeto` o ON o.idObjeto = NEW.idObjeto
  WHERE c.idCuenta = NEW.idCuenta;
  
  IF v_exists = 0 THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Cuenta u objeto no existe';
  END IF;
  
  -- Verificar cantidad
  IF NEW.Cantidad < 0 THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Cantidad no puede ser negativa';
  END IF;
END//

DELIMITER ;

-- -----------------------------------------------------
-- Trigger `5to_RiotGames`.`bd_Inv`
-- -----------------------------------------------------
DROP TRIGGER IF EXISTS `5to_RiotGames`.`bd_Inv`;

DELIMITER //

CREATE TRIGGER `bd_Inv`
BEFORE DELETE ON `5to_RiotGames`.`Inventario`
FOR EACH ROW
BEGIN
  DECLARE 
    v_exists BOOLEAN;
  
  -- Verificar existencia de la cuenta y del objeto
  SELECT COUNT(*) INTO v_exists
  FROM `5to_RiotGames`.`CuentaLol` c
  JOIN `5to_RiotGames`.`Objeto` o ON o.idObjeto = OLD.idObjeto
  WHERE c.idCuenta = OLD.idCuenta;
  
  IF v_exists = 0 THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Cuenta u objeto no existe';
  END IF;
END//

DELIMITER ;

-- -----------------------------------------------------
-- Procedure `5to_RiotGames`.`EliminarCuentaLol`
-- -----------------------------------------------------
DROP PROCEDURE IF EXISTS `5to_RiotGames`.`EliminarCuentaLol`;

DELIMITER //

CREATE PROCEDURE `EliminarCuentaLol` (IN `p_idCuenta` INT UNSIGNED)
BEGIN
  DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
  END;
  
  START TRANSACTION;
  
  -- Eliminar objetos asociados a la cuenta
  DELETE FROM `5to_RiotGames`.`Inventario` WHERE `idCuenta` = p_idCuenta;
  
  -- Eliminar la cuenta
  DELETE FROM `5to_RiotGames`.`CuentaLol` WHERE `idCuenta` = p_idCuenta;
  
  COMMIT;
END//

DELIMITER ;

-- -----------------------------------------------------
-- Procedure `5to_RiotGames`.`EliminarCuentaValorant`
-- -----------------------------------------------------
DROP PROCEDURE IF EXISTS `5to_RiotGames`.`EliminarCuentaValorant`;

DELIMITER //

CREATE PROCEDURE `EliminarCuentaValorant` (IN `p_idCuenta` INT UNSIGNED)
BEGIN
  DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
  BEGIN
    ROLLBACK;
  END;
  
  START TRANSACTION;
  
  -- Eliminar objetos asociados a la cuenta
  DELETE FROM `5to_RiotGames`.`Inventario` WHERE `idCuenta` = p_idCuenta;
  
  -- Eliminar la cuenta
  DELETE FROM `5to_RiotGames`.`CuentaValorant` WHERE `idCuenta` = p_idCuenta;
  
  COMMIT;
END//

DELIMITER ;

-- -----------------------------------------------------
-- Procedure `5to_RiotGames`.`AddRangoLol`
-- -----------------------------------------------------
DROP PROCEDURE IF EXISTS `5to_RiotGames`.`AddRangoLol`;

DELIMITER //

CREATE PROCEDURE `AddRangoLol` (
  IN `p_nombre` VARCHAR(45),
  IN `p_puntosLigaNecesario` MEDIUMINT,
  IN `p_numero` TINYINT UNSIGNED
)
BEGIN
  INSERT INTO `5to_RiotGames`.`RangoLol` (`Nombre`, `PuntosLigaNecesario`, `Numero`)
  VALUES (p_nombre, p_puntosLigaNecesario, p_numero);
END//

DELIMITER ;

-- -----------------------------------------------------
-- Procedure `5to_RiotGames`.`AddRangoValorant`
-- -----------------------------------------------------
DROP PROCEDURE IF EXISTS `5to_RiotGames`.`AddRangoValorant`;

DELIMITER //

CREATE PROCEDURE `AddRangoValorant` (
  IN `p_nombre` VARCHAR(45),
  IN `p_puntosNecesarios` MEDIUMINT,
  IN `p_numero` SMALLINT UNSIGNED
)
BEGIN
  INSERT INTO `5to_RiotGames`.`RangoValorant` (`Nombre`, `PuntosNecesarios`, `Numero`)
  VALUES (p_nombre, p_puntosNecesarios, p_numero);
END//

DELIMITER ;

-- -----------------------------------------------------
-- Procedure `5to_RiotGames`.`AddObjeto`
-- -----------------------------------------------------
DROP PROCEDURE IF EXISTS `5to_RiotGames`.`AddObjeto`;

DELIMITER //

CREATE PROCEDURE `AddObjeto` (
  IN `p_nombre` VARCHAR(45),
  IN `p_precioEA` INT UNSIGNED,
  IN `p_precioRP` INT UNSIGNED,
  IN `p_venta` INT UNSIGNED,
  IN `p_idTipoObjeto` TINYINT UNSIGNED
)
BEGIN
  INSERT INTO `5to_RiotGames`.`Objeto` (`Nombre`, `PrecioEA`, `PrecioRP`, `Venta`, `idTipoObjeto`)
  VALUES (p_nombre, p_precioEA, p_precioRP, p_venta, p_idTipoObjeto);
END//

DELIMITER ;

-- -----------------------------------------------------
-- Procedure `5to_RiotGames`.`UpdateObjeto`
-- -----------------------------------------------------
DROP PROCEDURE IF EXISTS `5to_RiotGames`.`UpdateObjeto`;

DELIMITER //

CREATE PROCEDURE `UpdateObjeto` (
  IN `p_idObjeto` SMALLINT UNSIGNED,
  IN `p_nombre` VARCHAR(45),
  IN `p_precioEA` INT UNSIGNED,
  IN `p_precioRP` INT UNSIGNED,
  IN `p_venta` INT UNSIGNED,
  IN `p_idTipoObjeto` TINYINT UNSIGNED
)
BEGIN
  UPDATE `5to_RiotGames`.`Objeto`
  SET `Nombre` = p_nombre,
      `PrecioEA` = p_precioEA,
      `PrecioRP` = p_precioRP,
      `Venta` = p_venta,
      `idTipoObjeto` = p_idTipoObjeto
  WHERE `idObjeto` = p_idObjeto;
END//

DELIMITER ;

-- -----------------------------------------------------
-- Procedure `5to_RiotGames`.`UpdateRangoLol`
-- -----------------------------------------------------
DROP PROCEDURE IF EXISTS `5to_RiotGames`.`UpdateRangoLol`;

DELIMITER //

CREATE PROCEDURE `UpdateRangoLol` (
  IN `p_idRango` TINYINT UNSIGNED,
  IN `p_nombre` VARCHAR(45),
  IN `p_puntosLigaNecesario` MEDIUMINT,
  IN `p_numero` TINYINT UNSIGNED
)
BEGIN
  UPDATE `5to_RiotGames`.`RangoLol`
  SET `Nombre` = p_nombre,
      `PuntosLigaNecesario` = p_puntosLigaNecesario,
      `Numero` = p_numero
  WHERE `idRango` = p_idRango;
END//

DELIMITER ;

-- -----------------------------------------------------
-- Procedure `5to_RiotGames`.`UpdateRangoValorant`
-- -----------------------------------------------------
DROP PROCEDURE IF EXISTS `5to_RiotGames`.`UpdateRangoValorant`;

DELIMITER //

CREATE PROCEDURE `UpdateRangoValorant` (
  IN `p_idRango` SMALLINT UNSIGNED,
  IN `p_nombre` VARCHAR(45),
  IN `p_puntosNecesarios` MEDIUMINT,
  IN `p_numero` SMALLINT UNSIGNED
)
BEGIN
  UPDATE `5to_RiotGames`.`RangoValorant`
  SET `Nombre` = p_nombre,
      `PuntosNecesarios` = p_puntosNecesarios,
      `Numero` = p_numero
  WHERE `idRango` = p_idRango;
END//

DELIMITER ;

-- -----------------------------------------------------
-- Procedure `5to_RiotGames`.`AddCuentaLol`
-- -----------------------------------------------------
DROP PROCEDURE IF EXISTS `5to_RiotGames`.`AddCuentaLol`;

DELIMITER //

CREATE PROCEDURE `AddCuentaLol` (
  IN `p_idServidor` TINYINT UNSIGNED,
  IN `p_nombre` VARCHAR(45),
  IN `p_contrasena` CHAR(64),
  IN `p_eMail` VARCHAR(45),
  IN `p_nivel` INT UNSIGNED,
  IN `p_esenciaAzul` INT UNSIGNED,
  IN `p_puntosRiot` INT UNSIGNED,
  IN `p_puntosLiga` MEDIUMINT,
  IN `p_idRango` TINYINT UNSIGNED
)
BEGIN
  DECLARE v_idCuenta INT UNSIGNED;
  
  -- Insertar la cuenta
  INSERT INTO `5to_RiotGames`.`Cuenta` (`idServidor`, `Nombre`, `Contrasena`, `eMail`)
  VALUES (p_idServidor, p_nombre, p_contrasena, p_eMail);
  
  -- Obtener el idCuenta generado
  SET v_idCuenta = LAST_INSERT_ID();
  
  -- Insertar la cuenta en la tabla CuentaLol
  INSERT INTO `5to_RiotGames`.`CuentaLol` (`idCuenta`, `Nombre`, `Nivel`, `EsenciaAzul`, `PuntosRiot`, `PuntosLiga`, `idRango`)
  VALUES (v_idCuenta, p_nombre, p_nivel, p_esenciaAzul, p_puntosRiot, p_puntosLiga, p_idRango);
END//

DELIMITER ;

-- -----------------------------------------------------
-- Procedure `5to_RiotGames`.`AddCuentaValorant`
-- -----------------------------------------------------
DROP PROCEDURE IF EXISTS `5to_RiotGames`.`AddCuentaValorant`;

DELIMITER //

CREATE PROCEDURE `AddCuentaValorant` (
  IN `p_idServidor` TINYINT UNSIGNED,
  IN `p_nombre` VARCHAR(45),
  IN `p_contrasena` CHAR(64),
  IN `p_eMail` VARCHAR(45),
  IN `p_nivel` INT UNSIGNED,
  IN `p_puntosRiot` INT UNSIGNED,
  IN `p_puntosNecesarios` MEDIUMINT,
  IN `p_idRango` SMALLINT UNSIGNED
)
BEGIN
  DECLARE v_idCuenta INT UNSIGNED;
  
  -- Insertar la cuenta
  INSERT INTO `5to_RiotGames`.`Cuenta` (`idServidor`, `Nombre`, `Contrasena`, `eMail`)
  VALUES (p_idServidor, p_nombre, p_contrasena, p_eMail);
  
  -- Obtener el idCuenta generado
  SET v_idCuenta = LAST_INSERT_ID();
  
  -- Insertar la cuenta en la tabla CuentaValorant
  INSERT INTO `5to_RiotGames`.`CuentaValorant` (`idCuenta`, `Nombre`, `Nivel`, `PuntosRiot`, `PuntosNecesarios`, `idRango`)
  VALUES (v_idCuenta, p_nombre, p_nivel, p_puntosRiot, p_puntosNecesarios, p_idRango);
END//

DELIMITER ;
-- Insertar datos en la tabla Servidor
CALL `5to_RiotGames`.`sp_insertar_servidor`('Servidor1', 'S1');
CALL `5to_RiotGames`.`sp_insertar_servidor`('Servidor2', 'S2');

-- Insertar datos en la tabla RangoLol
CALL `5to_RiotGames`.`sp_insertar_rango_lol`('Bronce', 0);
CALL `5to_RiotGames`.`sp_insertar_rango_lol`('Plata', 1000);
CALL `5to_RiotGames`.`sp_insertar_rango_lol`('Oro', 2000);

-- Insertar datos en la tabla TipoObjeto
CALL `5to_RiotGames`.`sp_insertar_tipo_objeto`('Arma');
CALL `5to_RiotGames`.`sp_insertar_tipo_objeto`('Escudo');
CALL `5to_RiotGames`.`sp_insertar_tipo_objeto`('Accesorio');

-- Insertar datos en la tabla Objeto
CALL `5to_RiotGames`.`sp_insertar_objeto`('Espada de Fuego', 100, 0, 10, 1);
CALL `5to_RiotGames`.`sp_insertar_objeto`('Escudo de Titanes', 200, 0, 20, 2);
CALL `5to_RiotGames`.`sp_insertar_objeto`('Anillo de Poder', 300, 0, 30, 3);

-- Insertar datos en la tabla RangoValorant
CALL `5to_RiotGames`.`sp_insertar_rango_valorant`('Hierro', 0, 0);
CALL `5to_RiotGames`.`sp_insertar_rango_valorant`('Bronce', 1, 1000);
CALL `5to_RiotGames`.`sp_insertar_rango_valorant`('Plata', 2, 2000);

-- Insertar datos en la tabla Cuenta
CALL `5to_RiotGames`.`sp_insertar_cuenta`(1, 'Cuenta1', 'Password123', 'cuenta1@example.com');
CALL `5to_RiotGames`.`sp_insertar_cuenta`(2, 'Cuenta2', 'Password456', 'cuenta2@example.com');

-- Insertar datos en la tabla CuentaLol
CALL `5to_RiotGames`.`sp_insertar_cuenta_lol`(1, 'LolCuenta1', 30, 5000, 2000, 1);
CALL `5to_RiotGames`.`sp_insertar_cuenta_lol`(2, 'LolCuenta2', 40, 6000, 3000, 2);

-- Insertar datos en la tabla Inventario
CALL `5to_RiotGames`.`sp_insertar_inventario`(1, 1, 5);
CALL `5to_RiotGames`.`sp_insertar_inventario`(1, 2, 3);
CALL `5to_RiotGames`.`sp_insertar_inventario`(2, 3, 7);

-- Insertar datos en la tabla CuentaValorant
CALL `5to_RiotGames`.`sp_insertar_cuenta_valorant`(1, 'ValorantCuenta1', 20, 1000, 500, 1);
CALL `5to_RiotGames`.`sp_insertar_cuenta_valorant`(2, 'ValorantCuenta2', 25, 1500, 800, 2);

